                                            ****LENGUAJE UNIFICADO DE MODELADO****

Lenguaje gráfico sirve para vizualizar, documentar y construir un aplicación o sistema software.
Representa aspectos del sistema software, estructura y comportamiento y las interacciones entre objetos.

                                             ***Casos de uso: **************
Describe la funcionalidad del sistema desde el punto de vista del usuario. Define interacciones entre actores y sistema
para realizar funciones concretas (casos de uso). No entra en detalles. Define funcionalidades del sistema (qué hace).

				            ***Diagramas de clases ***********
Es un tipo de diagrama de estructura estática que describe la estructura de un sistema mostrando las clases del sistema, 
sus atributos, operaciones, y las relaciones entre los objetos

                                             ***Relaciones: ***************
*Dependencias:
--Include: El caso base depende y siempre incluirá el comportamiento de otro caso de uso para poder completar su objetivo. <<include>>
--Extend: El caso base depende opcionalmente e incluirá ocasionalmente el comportamiento de otro caso de uso para completar su objetivo. <<extend>>

*Generalización: 
En los diagramas de casos de uso es similar a la "herencia" en POO. Es una forma de representar una relación
"es un tipo de" entre casos de uso.

*Asociación:
Las asociaciones representan las relaciones más generales entre clases, es decir, las relaciones con menor contenido semántico.

*Agregación: 
La agregación es un tipo de asociación que indica que una clase es parte de otra clase. A diferencia que en la composición, 
la destrucción del compuesto no conlleva la destrucción de los componentes. 

*Composición: 
Composición es una forma fuerte de composición donde la vida de la clase contenida debe coincidir con la vida de la clase contenedor. 
Los componentes constituyen una parte del objeto compuesto. De esta forma, los componentes no pueden ser compartidos por varios objetos compuestos.